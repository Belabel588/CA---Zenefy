.search-section {
  margin-top: 2em;
  display: flex;
  flex-direction: column;
  padding: 2rem;
  background-color: $dark-mode-background;
  border-radius: 8px;
  height: calc(100vh - 170px);
  overflow-y: auto;
  

  @media (max-width:770px) {
    
    width: 90vw;
  }

  .search-header-container{
    display: flex;
    align-items: center;
    justify-content: space-between;


    .ai-container{
      display: flex;
      align-items: center;
      gap: 1em;

    }
  }

  /* Dark background for a Spotify-like look */
  color: #ffffff;
  /* White text on a dark background */

  .search-list {
    // display: grid;
    // grid-template-columns: repeat(auto-fit, minmax(200px, 300px));
    display: flex;
    flex-wrap: wrap;
    /* Responsive grid */
    // grid-gap: 1rem;
    gap: 1em;
    list-style: none;
    padding: 0;
    width: 100%;
    /* Ensure the grid takes up the full width of the container */
    /* Limit the maximum width */
    justify-items: stretch;
    /* Stretch the items to fill the grid cells */ 
    @media (max-width:770px) {
      // flex-grow: 0;

      display: grid;
      grid-template-columns: repeat(2,1fr);
    }
    a{
      flex-grow: 1;
      flex-basis: calc(20% - 1em); // Basis for each item (before growing)
      min-width: 220px;
      min-height: 120px;
      max-width: 300px;
      max-height: 150px;
      height: calc(15vw);
      
      @media (max-width:1060px) {
        // min-width: 200px;


        
      }
      @media (max-width:550px) {
        // flex-grow: 0;
        min-width: 100px;
        width: 130px;

      }
    }
   

    li {
      // min-height: 6rem;
      /* Set the minimum height */
      // max-height: 9rem;
      /* Set the maximum height */
      height: 100%;
      width: 100%;
      /* Ensure the li elements take up the full width of their grid cells */
      border-radius: 8px;
      padding: 1rem;
      display: flex;
      justify-content: left;
      align-items: start;
      background-color: #282828;
      /* Dark grey background for list items */
      color: white;
      font-weight: bold;
      text-align: center;
      transition: transform 0.3s ease, background-color 0.3s ease;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      /* Subtle shadow for depth */
      @media (max-width:770px) {
        // flex-grow: 0;

      }
      span{
        z-index: 2;
      }
      

      &:hover {
        transform: scale(1.05);
        background-color: #333333;
        /* Slightly lighter on hover */
      }


    }

    a {
      text-decoration: none;
      color: inherit;

    }

  }
}

.search-page-container{
  height: calc(100vh - 170px);
  overflow-y: auto;
  background-color: $dark-mode-background;

}

.search-results {
  display: grid;
  grid-template-columns: 1fr 2fr;
  // height: 300px;
  gap: 1em;
  /* Adds some spacing between the grid columns */
  .img-container{

    width: 100px;
    height: 100px;
    object-fit: cover;
  }
  img {

    width: 100px;
    height: 100px;
    object-fit: cover;
    /* Ensures the image covers the area without distortion */
  }

  .info {
    display: flex;
    flex-direction: column;
    align-items: left;
    justify-content: left;
    padding: 10px;
    background-color: $dark-mode-background;
    
    
    h2,
    h6,
    img {
      // margin-left: 20px;
    }


    
  }
  
  .station-container{
    background-color: $grey-darkest;
    padding: 1em;
    border-radius: 8px;
    transition: 0.2s;
    position: relative;
    
    &:hover{
      background-color: $dark-mode-active;
      
    }
    .playing-container, .play-button-container{
      position: absolute;
      inset-inline-end: 0.25em;
      bottom: -25px;
      transition: 0.2s;
      opacity: 0;
  }
  &:hover{
      // background: linear-gradient(90deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.25) 50%, rgba(255, 255, 255, 0.15) 100%);
      background-color: rgba(255, 255, 255, 0.25);
      
      .playing-container, .play-button-container{
          
          opacity: 1;
          bottom: 5px;

      }            
      .play-button, .pause-button{
          display: flex;

      }  
       .animation-container{
          display: none;
      }
  }


  a{
      color: $white;
      text-decoration: none;
      
  }
  span{
      text-wrap: nowrap;
      overflow: hidden;
      // text-overflow: ellipsis;
  }

  // .station-cover{
  //     // padding: 5px;
  //     border-top-left-radius: 5px;
  //     border-bottom-left-radius: 5px;

  //     height: calc(3.5vw);
  //     width: 3.5vw;
  //     object-fit:scale-down;

  //     min-width: 60px;
  //     min-height: 60px;

  // }

  .play-button-container, .playing-container{

      margin: 0.5em;
      min-width: 36px;
      width: clamp(16px, 5vw, 42px);
      height: clamp(16px, 5vw, 42px);

  }
  .play-button, .pause-button{
      display: none;
      background-color: $green;
      color: black;
      // font-size: 2em;
      // padding: 10px;
      border: none;
      border-radius: 50%;
      padding: 0px 0px 0px 5px;
      // padding: clamp(10px, 2vw, 20px);

      @media (max-width: 900px) {
          padding: 0px 0px 0px 2px;
      }
      cursor: pointer;
      transition: 0.1s;
      font-size: clamp(16px, 5vw, 42px);
      width: clamp(16px, 5vw, 42px);
      height: clamp(16px, 5vw, 42px);
      // font-size: calc(3vw);
      // font-size: 1em;
      box-shadow: 0 8px 8px rgba(0, 0, 0, 0.3), 0 4px 4px rgba(0, 0, 0, 0.2);

  }
  .pause-button{
      padding: 0px;
  }
  .animation-container {
      // justify-self: center;
      // background-color: black;
      // border-radius: 50%;
      // display: flex;
      // justify-content: center;
      // align-items: center;
      // color: $green;


      width: clamp(16px, 5vw, 42px);
      height: clamp(16px, 5vw, 42px);
      display: flex;
      svg{
          margin-inline-start: 0.8em;
          justify-self: center;
          align-self: center;

          // width: 50%;
          // height: 50%;
      }

  }
  
  .play-button:hover, .pause-button:hover {
      transform: scale(1.05);

  }
  }
  
  .songs {

    background-color: $dark-mode-background;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    /* Distribute songs evenly within the grid */
    overflow-y: auto;
    /* Allows scrolling if there are more songs */
    padding: 10px;
  }

  .song-item {
    display: grid;
    grid-template-columns: 50px 1fr 50px 50px 20px;
    align-items: center;
    margin-bottom: 10px;
    gap: 0.6em;

    img {
      width: 50px;
      height: 50px;
      margin-right: 10px;
    }

    .song-details {
      display: flex;
      flex-direction: column;
      justify-content: center;

      .name-container {
        width: 250px;
        overflow: hidden;

        .item-name {
          width: fit-content;
          max-width: 250px;
          text-wrap: nowrap;
          overflow: hidden;

          &:hover {
            text-decoration: underline;
          }
        }
      }

      .artist-name {
        font-size: 0.8rem;
        margin: 0;
        color: $grey-light;
        /* A lighter color for the artist name */
      }


    }

    .time {
      color: $grey-light;
    }

    &:hover {}

  }

  .song-item {

    align-items: center;
    // gap: 1em;
    font-family: 'GothamBook';
    border-radius: 5px;
    padding: 2.5px;
    font-size: 0.8em;
    cursor: pointer;
    text-decoration: none;
    position: relative;

    .item-name {
      color: $white;
    }

    .playing {
      color: $green;

    }


    &:hover {
      background-color: rgba(255, 255, 255, 0.1);

      .img-container {

        .pause-button-container,
        .play-button-container {
          display: flex;
        }
      }
    }

    .img-container {
      display: flex;
      align-items: center;
      justify-items: center;

      height: 50px;
      width: 50px;

      img {
        width: 50px;
        height: 50px;
        object-fit: scale-down;
        border-radius: 5px;
      }

      // background-color: $green;
      border-radius: 5px;



      .pause-button-container,
      .play-button-container {
        justify-self: center;
        background-color: rgba(0, 0, 0, 0.583);
        width: 50px;
        height: 50px;
        border-radius: 5px;

        display: none;
        align-items: center;
        justify-items: center;
        position: absolute;

        font-size: 2em;
        color: $white;
        z-index: 4;

        .play-button,
        .pause-button {
          width: 30px;
          height: 30px;
          margin: 0 auto;

        }

      }
    }

    &:hover {
      .options-button {

        opacity: 1;
      }
    }

    .options-button {
      font-size: 1.2em;
      color: $white;
      opacity: 0;

      &:hover {
        color: $grey-light;
      }
    }

    .info-container {

      display: flex;
      flex-direction: column;


      .item-name {
        color: $white;
      }

      .song-name.playing {
        color: $green;
      }

      .playlist-details {
        display: flex;
        gap: 0.25em;
      }

      span {
        color: $grey-light;
      }

      span:first-of-type::after {
        content: ' â€¢'

      }
    }

    &:hover {
      .plus {
        display: block;
      }
    }

    .plus {
      fill: $grey-light;
      width: 17px;
      display: none;

      &:hover {
        fill: $white;
        transform: scale(1.1);

      }
    }

    .added {
      fill: $green;
      width: 17px;

      &:hover {

        transform: scale(1.1);

      }

    }
  }

  .suggested-stations-container{

    .station-container{
      // width: 150px;
      // overflow-x: hidden;
 
      .artists{
        // width: 10vw;
      }
    }
  }
  .suggested-artist-stations{
  grid-column: 1/-1;
  display: flex;
  flex-wrap: nowrap;
  flex-direction: column;
  b{
    margin-inline-start: 0.8em;
  }


}

.artists-container{
  b{
    margin-inline-start: 0.8em;
  }
}
}

.tag,
.search-list li {
  position: relative;
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
  padding: 10px;
  border-radius: 10px;
  overflow: hidden; // Ensure that the image doesn't overflow the tag's borders

  img {
    position: absolute;
    bottom: -10px;
    
    right: -10px;
    width: 100px;
    height: 100px;
    transform: rotate(25deg); // Tilt the image
    z-index: 0; // Make sure the image is behind the text
    
  }

  // Ensure text is on top of the image
  span {
    position: relative;
    z-index: 1;
  }

  
}

.ai-checkbox {
  display: inline-block;
  position: relative;
  width: 60px;
  height: 34px;

  input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: $grey-light;
    transition: 0.4s;
    border-radius: 34px;

    &:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      transition: 0.4s;
      border-radius: 50%;
    }
  }

  input:checked + .slider {
    background-color: $green;
    background: linear-gradient(135deg, #3246ff,  #9b00b0);

  }

  input:checked + .slider:before {
    transform: translateX(26px);
    background-color: $green;
  }

  .label {
    position: absolute;
    top: -25px;
    left: 0;
    font-size: 14px;
    color: #00d4ff;
    font-weight: bold;
    transition: color 0.4s;
  }

  input:checked + .slider + .label {
    color: #fff;
  }
}


.preloader {
  position: relative;
  width: 100vw;
  height: 100vh;
  background: rgb(124, 124, 124); 
  overflow: hidden;

  .wave {
    position: absolute;
    bottom: 0;
    width: 200%;
    height: 100%;
    background: rgba(255, 255, 255, 0.3); // Light effect
    opacity: 0.7;
    transform: translateX(-50%);
    animation: wave-animation 3s infinite linear;

    &:nth-child(2) {
      bottom: 10%;
      background: rgba(255, 255, 255, 0.2); // Slightly different opacity
      animation: wave-animation 5s infinite linear;
    }
  }
}

@keyframes wave-animation {
  0% {
    transform: translateX(-50%) translateY(0);
  }
  50% {
    transform: rotate(10deg) translateY(250px) translateX(-25%) ;
    // transform: rotate(10deg);
  }
  100% {
    transform: translateX(-50%) translateY(0);
  }
}


